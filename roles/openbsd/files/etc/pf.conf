int_if = "bge1"
ext_if = "bge0"
pf_if = "em0"

nat_ip = "carp1"
fwd_ip = "carp2"
fwd_ip2 = $nat_ip

internal = "192.168.42.0/24"
# Network breakdown
gateways = "192.168.42.0/30"                     # 192.168.42. 0- 3
DCs = "192.168.42.4/31"                          # 192.168.42. 4- 5
servers = "{192.168.42.6/31 192.168.42.8/29}"    # 192.168.42. 6-15
printers = "192.168.42.16/30"                    # 192.168.42.16-19
reserved = "{192.168.42.20/30 192.168.42.24/29}" # 192.168.42.20-31 reserved for future use
clients = "192.168.42.32/27"                     # 192.168.42.32-63
academic_side = "{192.168.42.32/30
	192.168.42.36/31 192.168.42.37}"         #   192.168.42.32-38
gaming_side = "{192.168.42.39 192.168.42.40/29}" #   192.168.42.39-47
quiet_side = "192.168.42.48/28"                  #   192.168.42.48-63
dhcp = "{192.168.42.64/26 192.168.42.128/25}"    # 192.168.42.64-255

# Server types
debian = "{192.168.42.7 192.168.42.9 192.168.42.12}"
mac = "{192.168.42.46 192.168.42.47}"
obsd = "$gateways"
ubuntu = "{192.168.42.6 192.168.42.13}"
unused_servers = "{192.168.42.8 192.168.42.10/31 192.168.42.14/31}"

# Allowed services
allowed_debian_apt = "{ftp.us.debian.org security.debian.org}"
allowed_ubuntu_apt = "{us.archive.ubuntu.com security.ubuntu.com extras.ubuntu.com}"
allowed_carbon_apt = "{code.bitlbee.org}"
allowed_ntp = "{timelord.utdallas.edu tick.uh.edu navobs1.wustl.edu ntp.okstate.edu omgpwned.net}"

facebook = "{66.220.144.0/20 69.171.224.0/19 173.252.64.0/18}"
utd = "{10.0.0.0/8 129.110.0.0/16}"

table <not_self> const {0/0 !self}
table <martians> const {0.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.2.0/24 192.168.0.0/16 !192.168.42.0/24 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24 240.0.0.0/4}
table <utdonly> persist
table <nofb> persist
table <minecraft>  # These IPs are updated every minute by a cron script because it's on a CDN

set block-policy drop
set skip on {lo $pf_if}

block log # Default deny

# Clean up the logs this section much happen before urpf the rest is at the bottom
block quick inet6  # All IPv6 traffic must be local and boring

# Be a good netizen and don't allow users to spoof packets
block quick on {$ext_if $int_if} from <martians>
block quick on {$ext_if $int_if} to <martians>
block in log quick from urpf-failed label uRPF 

####
# INTERNET IN
####
pass out quick on $int_if from <not_self>

pass in quick inet proto icmp icmp-type echoreq                                          # Respond to pings
pass in quick on $ext_if proto tcp to $fwd_ip port {22 80 7070 8080} rdr-to 192.168.42.7 # ssh, http, IRC SSL, IRC
pass in quick on $ext_if proto tcp to $fwd_ip2 port 22 rdr-to 192.168.42.6               # ssh
pass in quick on $ext_if proto tcp to $fwd_ip port 5060 rdr-to 192.168.42.11             # minecraft
pass in quick on $ext_if proto tcp from $utd to $fwd_ip port 9191 rdr-to 192.168.42.4    # papercut (UTD only)

####
# IN
####
pass in quick on $int_if proto tcp to self port ssh
pass in quick on $int_if proto udp to self port ntp
pass in quick on $int_if proto {tcp udp} to self port domain                       # DNS
pass in quick on $int_if proto udp from 0.0.0.0 port 68 to 255.255.255.255 port 67 # DHCP step 1/3
pass in quick on $int_if proto udp from $int_if:network port 68 to self port 67    # DHCP renew
pass in quick on $int_if proto tcp from $gateways to self port 647                 # DHCPd communication
pass in quick on {$int_if $ext_if} proto carp keep state (no-sync)

####
# OUT
####
pass out quick inet proto icmp                                                      # let ICMP out
pass out quick on $ext_if proto tcp from self to mirror.esc7.net port 80            # Allow updates
pass out quick on $int_if proto tcp from self to 192.168.42.7                       # Allow FTP to n for setup.sh
pass out quick on $ext_if proto tcp from self to bitbucket.org port 22              # Allow ssh for git for dotfiles
pass out quick on $ext_if proto tcp from self to github.com port 443                # Allow https for git for vim plugins
pass out quick on $ext_if proto udp from self to $allowed_ntp port ntp              # NTP
pass out quick on $ext_if proto {udp tcp} from self to any port domain              # DNS
pass out quick on $int_if proto {udp tcp} from self to {$gateways $DCs} port domain # for forwarding the MS domains to the DCs
pass out quick on $int_if proto tcp from self to {$servers $mac} port ssh           # ssh
pass out quick on $int_if proto udp from self port 67 to 255.255.255.255 port 68    # DHCP step 2
pass out quick on $int_if proto udp from self port 67 to $int_if:network port 68    # DHCP step 4
pass out quick on $int_if proto udp from self port 67 to $int_if:network port 68    # DHCP step 4
pass out quick on $int_if proto tcp from self to $gateways port 647                 # DHCPd communication
pass out quick on {$int_if $ext_if} proto carp keep state (no-sync)                 # CARP

####
# INTERNAL OUT
####
pass in quick log on $int_if from $int_if:network to 50.197.126.29
pass in quick on $int_if from $int_if:network to <not_self>

## Gateway (handled above)

## DCs
pass out quick on $ext_if from $DCs nat-to $nat_ip # Haven't figured out how to firewall windows yet

## servers
block out log quick on $ext_if from $unused_servers
pass out quick on $ext_if from $debian to $allowed_debian_apt nat-to $nat_ip
pass out quick on $ext_if from $ubuntu to $allowed_ubuntu_apt nat-to $nat_ip
pass out quick on $ext_if from 192.168.42.6 to $allowed_carbon_apt nat-to $nat_ip
pass out quick on $ext_if proto tcp from 192.168.42.7 to madhax.net port 7700 nat-to $fwd_ip         # Allow n to access vanqish for IRC
pass out quick on $ext_if proto tcp from 192.168.42.7 to smtp.utdallas.edu port 25 nat-to $nat_ip    # So the account script can email
pass out quick on $ext_if proto tcp from 192.168.42.6 to any port {6667 6697} nat-to $nat_ip         # allow IRC on carbon
pass out quick on $ext_if proto tcp from 192.168.42.6 to any port 5222 nat-to $nat_ip                # allow jabber on carbon
pass out quick on $ext_if proto tcp from 192.168.42.6 to any port {80 443} nat-to $nat_ip            # allow http on carbon
pass out quick on $ext_if proto tcp from $servers to any port 22 nat-to $nat_ip                      # allow ssh for git for easy dotfile management
pass out quick on $ext_if proto tcp from $servers to github.com port 443 nat-to $nat_ip              # Allow https for github for vim plugins
pass out quick on $ext_if proto tcp from 192.168.42.9 to translate.google.com port 80 nat-to $nat_ip # Allow F to say things
pass out quick on $ext_if proto tcp from 192.168.42.7 to <minecraft> port 80 nat-to $nat_ip          # allow nitrogen to access minecraft servers to verify users

## printers
block log quick from $printers

## reserved
block log quick from $reserved

##clients and dhcp
# Having default deny on clients and dhcp would be impossible to maintiain and provide little to no additional security
block out quick on $ext_if from <nofb> to $facebook             # For people who want to block Facebook
pass out quick on $ext_if from <utdonly> to $utd nat-to $nat_ip # For people who want to only access UTD stuff
block out quick on $ext_if from <utdonly>

pass out quick on $ext_if from {$clients $dhcp} nat-to $nat_ip  # NAT everyone else


# Clean the logs up a bit
block quick on $ext_if proto udp from 129.110.116.1 port 1985 to 224.0.0.2 port 1985             # HSRP messages
block quick proto udp from fe80::0/64 port 546 to ff02::1:2 port 547                             # DHCPv6
block quick proto udp from fe80::0/64 port 5353 to ff02::fb port 5353                            # mDNS
block quick proto udp from $ext_if:network  port 5353 to 224.0.0.251 port 5353                   # mDNS
block quick proto icmp6 from {:: fe80::0/64} to ff02::16                                         # MLD
block quick proto udp from fe80::0/64 to ff02::1:3 port 5355                                     # LLMNR
block quick proto udp from $ext_if:network to 224.0.0.252 port 5355                              # LLMNR
block quick proto udp from $ext_if:network to 239.255.255.250 port 3702                          # WS-Discovery
block quick proto udp from fe80::0/64 to ff02::c port 3702                                       # WS-Discovery
block quick on $ext_if proto udp from $utd to $ext_if:broadcast port {137, 138}                  # netBIOS
block quick on $ext_if proto udp from $ext_if:network port 17500 to $ext_if:broadcast port 17500 # Dropbox
block quick on $int_if proto udp from $int_if:network port 17500 to $int_if:broadcast port 17500 # Dropbox
block quick on $ext_if proto udp from $ext_if:network to 239.255.255.250 port 1900               # SSDP UPnP
block quick on  $int_if proto udp from $int_if:network to 192.168.42.3 port 1900                 # SSDP UPnP
block quick on {$ext_if $int_if} proto udp from any to ff02::c port 1900                         # SSDP UPnP
block quick on $int_if proto tcp from {$clients $dhcp} flags R/R                                 # FIN and RST packets
block quick on $int_if proto tcp from {$clients $dhcp} flags F/F                                 # FIN and RST packets
block quick on $int_if proto tcp from {$clients $dhcp} to $nat_ip port 80 flags S/FSRPAUEW       # noise from NoScript ABE checking WAN IP

block quick on $int_if proto tcp from 192.168.42.46 to port 993 flags P/FSRPAUEW                 # I think this is noise from checking mail
block quick on $int_if proto udp from $mac port 5353 to 192.168.42.3 port 5351                  # Not sure seems to be dns related
