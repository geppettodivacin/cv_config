int_if = "{{ internal_if }}"
ext_if = "{{ external_if }}"
pf_if = "{{ pf_if }}"

int_carp = "carp0"
nat_ip = "carp1"
fwd_ip = "carp2"
fwd_ip2 = $nat_ip

internal = "192.168.42.0/24"
# Network breakdown
gateways = "192.168.42.0/30"                     # 192.168.42. 0- 3
DCs = "192.168.42.4/31"                          # 192.168.42. 4- 5
servers = "{192.168.42.6/31 192.168.42.8/29}"    # 192.168.42. 6-15
printers = "192.168.42.16/30"                    # 192.168.42.16-19
reserved = "{192.168.42.20/30 192.168.42.24/29}" # 192.168.42.20-31 reserved for future use
clients = "192.168.42.32/27"                     # 192.168.42.32-63
academic_side = "{192.168.42.32/30
	192.168.42.36/31 192.168.42.37}"         #   192.168.42.32-38
gaming_side = "{192.168.42.39 192.168.42.40/29}" #   192.168.42.39-47
quiet_side = "192.168.42.48/28"                  #   192.168.42.48-63
dhcp = "{192.168.42.64/26 192.168.42.128/25}"    # 192.168.42.64-255

# Server types
debian = "{192.168.42.6/31 192.168.42.8/31}"
mac = "{192.168.42.39 192.168.42.47}"
obsd = "$gateways"
ubuntu = "192.168.42.12"

# Allowed services
allowed_debian_apt = "{ftp.us.debian.org security.debian.org ftp.utexas.edu}"
allowed_ubuntu_apt = "{us.archive.ubuntu.com security.ubuntu.com extras.ubuntu.com}"
allowed_carbon_apt = "{code.bitlbee.org}"
allowed_ntp = "{timelord.utdallas.edu tick.uh.edu navobs1.wustl.edu ntp.okstate.edu omgpwned.net}"

utd = "{10.0.0.0/8 129.110.0.0/16}"

table <martians> const {0.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.2.0/24 192.168.0.0/16 !192.168.42.0/24 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24 240.0.0.0/4}

set block-policy drop
set skip on {lo $pf_if {{ vm_if }}}

block log # Default deny

block quick inet6 # All IPv6 traffic must be local and boring

# Be a good netizen and don't allow users to spoof packets
block quick from <martians>
block quick to <martians>
block in log quick from urpf-failed label uRPF

pass proto icmp # Always allow ICMP


####
# IN
####
# To self
pass in quick on $int_if inet proto tcp to $int_if port ssh
pass in quick on $int_if inet proto udp to {$int_if $int_carp} port ntp
pass in quick on $int_if inet proto {tcp udp} to {$int_if $int_carp} port domain   # DNS
pass in quick on $int_if proto udp from 0.0.0.0 port 68 to 255.255.255.255 port 67 # DHCP step 1/3
pass in quick on $int_if proto udp from $int_if:network port 68 to $int_if port 67 # DHCP renew
pass in quick on $int_if proto tcp from $gateways to $int_if port 647              # DHCPd communication
pass in quick on {$int_if $ext_if} proto carp keep state (no-sync)

# From internet
pass in quick on $ext_if proto tcp to $fwd_ip port {22 80 6667 6697 7070 8080} rdr-to 192.168.42.7 # ssh, http, IRC
pass in quick on $ext_if proto tcp to $fwd_ip2 port {22 60001:60999} rdr-to 192.168.42.6           # ssh, mosh
pass in quick on $ext_if proto tcp to $fwd_ip port 1729 rdr-to 192.168.42.12 port 22               # mg ssh test
pass in quick on $ext_if proto tcp from $utd to $fwd_ip port 9191 rdr-to 192.168.42.4              # papercut (UTD only)
pass in quick on $ext_if proto tcp to $fwd_ip port 25565 rdr-to 192.168.42.8                       # minecraft

# From internal
## DCs
pass in quick on $int_if from $DCs # Haven't figured out how to firewall windows yet

## servers
pass in quick on $int_if from $debian to $allowed_debian_apt
pass in quick on $int_if from $ubuntu to $allowed_ubuntu_apt
pass in quick on $int_if from 192.168.42.6 to $allowed_carbon_apt
pass in quick on $int_if proto tcp from 192.168.42.7 to madhax.net port 7700             # Allow n to access vanqish for IRC
pass in quick on $int_if proto tcp from 192.168.42.7 to smtp.utdallas.edu port 25        # So the account script can email
pass in quick on $int_if proto tcp from 192.168.42.6 to any port {80 443 5222 6667 6697} # allow http, jabber, and IRC on carbon
pass in quick on $int_if proto tcp from 192.168.42.8 to any port {80, 443}               # O needs to check external services
pass in quick on $int_if proto tcp from 192.168.42.9 to translate.google.com port 80     # Allow F to say things

## clients and dhcp
# Having default deny on clients and dhcp would be impossible to maintiain and provide little to no additional security
anchor gaming
pass in quick on $int_if from {$clients $dhcp}


####
# OUT
####
# Forwarding
pass out quick on $ext_if inet received-on $int_if nat-to $nat_ip # "inet" MUST be here or pf will nat-to an IPv6 address
pass out quick on $int_if inet received-on $ext_if
# From self
pass out quick on $ext_if inet proto tcp from $ext_if to mirror.esc7.net port 80    # Allow updates
pass out quick on $ext_if inet proto udp from $ext_if to $allowed_ntp port ntp      # NTP
pass out quick on $ext_if inet proto {udp tcp} from $ext_if to any port domain      # DNS
pass out quick on $int_if proto {udp tcp} from $int_if to $gateways port domain     # for transfers and redundancy
pass out quick on $int_if proto {udp tcp} from $int_if to $DCs port domain          # for forwarding the MS domains to the DCs
pass out quick on $int_if proto tcp from $int_if to {$servers $mac} port ssh        # ssh
pass out quick on $int_if proto udp from $int_if port 67 to 255.255.255.255 port 68 # DHCP step 2
pass out quick on $int_if proto udp from $int_if port 67 to $int_if:network port 68 # DHCP step 4
pass out quick on $int_if proto tcp from $int_if to $gateways port 647              # DHCPd communication
pass out quick on $int_if inet proto carp from $int_if keep state (no-sync)         # CARP
pass out quick on $ext_if inet proto carp from $ext_if keep state (no-sync)         # CARP


# Clean the logs up a bit
block quick on $ext_if proto udp from 129.110.116.1 port 1985 to 224.0.0.2 port 1985             # HSRP messages
block quick proto udp from $ext_if:network port 5353 to 224.0.0.251 port 5353                    # mDNS
block quick proto udp from $ext_if:network to 224.0.0.252 port 5355                              # LLMNR
block quick proto udp from $ext_if:network to 239.255.255.250 port 3702                          # WS-Discovery
block quick on $ext_if proto udp from $utd to $ext_if:broadcast port {137, 138}                  # netBIOS
block quick on $ext_if proto udp from $ext_if:network port 17500 to $ext_if:broadcast port 17500 # Dropbox
block quick on $int_if proto udp from $int_if:network port 17500 to $int_if:broadcast port 17500 # Dropbox
block quick on $ext_if proto udp from $ext_if:network to 239.255.255.250 port 1900               # SSDP UPnP
block quick on $int_if proto udp from $int_if:network to 192.168.42.3 port 1900                  # SSDP UPnP
block quick on $int_if proto tcp from {$clients $dhcp} flags R/R                                 # FIN and RST packets
block quick on $int_if proto tcp from {$clients $dhcp} flags F/F                                 # FIN and RST packets
block quick on $int_if proto tcp from {$clients $dhcp} to $nat_ip port 80 flags S/FSRPAUEW       # noise from NoScript ABE checking WAN IP

block quick on $int_if proto tcp from 192.168.42.46 to port 993 flags P/FSRPAUEW                 # I think this is noise from checking mail
block quick on $int_if proto udp from $mac port 5353 to 192.168.42.3 port 5351                   # Not sure seems to be dns related
